/*
 * This file is generated by jOOQ.
 */
package com.horaoen.example4j.jooq.database;


import com.horaoen.example4j.jooq.database.tables.Author;
import com.horaoen.example4j.jooq.database.tables.Book;
import com.horaoen.example4j.jooq.database.tables.records.AuthorRecord;
import com.horaoen.example4j.jooq.database.tables.records.BookRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * library.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthorRecord> KEY_AUTHOR_PRIMARY = Internal.createUniqueKey(Author.AUTHOR, DSL.name("KEY_author_PRIMARY"), new TableField[] { Author.AUTHOR.ID }, true);
    public static final UniqueKey<BookRecord> KEY_BOOK_PRIMARY = Internal.createUniqueKey(Book.BOOK, DSL.name("KEY_book_PRIMARY"), new TableField[] { Book.BOOK.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BookRecord, AuthorRecord> FK_BOOK_AUTHOR_ID = Internal.createForeignKey(Book.BOOK, DSL.name("fk_book_author_id"), new TableField[] { Book.BOOK.AUTHOR_ID }, Keys.KEY_AUTHOR_PRIMARY, new TableField[] { Author.AUTHOR.ID }, true);
}
